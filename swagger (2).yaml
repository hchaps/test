swagger: '2.0'
info:
  title: Jobs API
  description:  |-
    The Jobs API allows you to manage and package your content within Smartling.
  version: "3.0.0"
host: api.smartling.com
x-explorer-enabled: false
schemes:
  - https
basePath: /jobs-api/v3
produces:
  - application/json
security:
  - SmartlingAuth: []
paths:
  /projects/{projectId}/jobs:
    get:
      summary: "List Jobs"
      tags:
        - Job
      description: "List / Search jobs within a project."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: jobName
          in: query
          type: string
          required: false
          description: Param used for searching for jobs by jobName. Any entry is treated as a LIKE query on the name of the job.
        - name: translationJobUids
          in: query
          type: array
          items:
            type: string
          required: false
          description: Param used for searching for jobs by translationJobUid. Supports up to 500 translationJobUids.
        - name: translationJobStatus
          in: query
          type: array
          items:
            type: string
          required: false
          description: Param used for searching for jobs by jobStatus.
        - name: limit
          in: query
          type: integer
          required: false
          description: The limit on the number of jobs returned.
        - name: offset
          in: query
          type: integer
          required: false
          description: The offset to use when searching for jobs.
        - name: sortBy
          in: query
          type: string
          required: false
          enum:
            - createdDate
            - dueDate
            - jobName
          description: The field to sort by.
        - name: sortDirection
          in: query
          type: string
          enum:
            - ASC
            - DESC
          required: false
          description: The direction for the sort.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ListJobsResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  totalCount : 2
                  items:
                  - translationJobUid : "abc123abc"
                    jobName : "myJobName"
                    targetLocaleIds : ["fr-FR","es"]
                    description : "my job description"
                    dueDate : "2015-11-21T11:51:17Z"
                    referenceNumber : "myReferenceNumber1"
                    createdDate : "2015-11-21T11:51:17Z"
                    jobStatus : "IN_PROGRESS"
                  - translationJobUid : "abc321xyz"
                    jobName : "myJobName"
                    targetLocaleIds : ["fr-FR","de"]
                    description : "my job description"
                    dueDate : "2015-11-21T11:51:17Z"
                    referenceNumber : "myReferenceNumber1"
                    createdDate : "2015-11-21T11:51:17Z"
                    jobStatus : "IN_PROGRESS"
    post:
      summary: "Create Job"
      tags:
        - Job
      description: "Creates a job within Smartling."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
          format: uuid
        - name: CreateJobRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/CreateJobRequest'
      responses:
        200:
          description: Response after successfully creating a job.
          schema:
            $ref: '#/definitions/ShallowJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  translationJobUid : "abc123abc"
                  jobName : "myJobName"
                  targetLocaleIds : ["fr-FR"]
                  description : "my job description"
                  dueDate : "2015-11-21T11:51:17Z"
                  referenceNumber : "myReferenceNumber1"
                  callbackUrl : "https://www.callback.com/smartling/job"
                  callbackMethod : "GET|POST"
                  createdDate : "2015-11-21T11:51:17Z"
                  modifiedDate : "2015-11-21T11:51:17Z"
                  createdByUserUid : "userUid123abc"
                  modifiedByUserUid : "userUid321abc"
                  jobStatus : "IN_PROGRESS"
                  firstCompletedDate : "2015-11-21T11:51:17Z"
                  lastCompletedDate : "2015-11-21T11:51:17Z"
        400:
          description: Validation error during job creation.
          examples:
            application/json:
              response:
                code: VALIDATION_ERROR
                errors:
                - key: null
                message: 'There is already a job with that name. Please provide a unique name.'
                details:
                  field: jobName
  /projects/{projectId}/jobs/{translationJobUid}/strings/add:
    post:
      summary: "Add strings to a job"
      tags:
        - Job content
      description: "Add strings to a job. This API is useful for clients who do not manage strings or content through files, but instead need to add strings to a job by some other means other than files."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: AddStringsJobRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/AddStringsJobRequest'
      responses:
        200:
          description: Response after successfully adding strings to a job
          schema:
            $ref: '#/definitions/SuccessFailCountJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  successCount: 100 # number of strings added to the job
                  failCount: 0 # number of strings that could not be added to the job
        202:
          description: Async response when adding strings to a job. When the system can not quickly add the strings to the job, then a 202 response is returned. The response contains a link and processUid to check the progress of the request. When a 202 is received, then the process of adding the content to the job will not be complete until the returned process has completed.
          schema:
            $ref: '#/definitions/AsyncProcessJobResponse'
          examples:
            application/json:
              response:
                code: ACCEPTED
                data:
                  message: This process will continue asynchronously and may take up to a few minutes.
                  url: "https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}"
        400:
          description: Validation error response
          examples:
            application/json:
              response:
                code: VALIDATION_ERROR
                errors:
                - key: null
                message: 'Invalid locales [ad]'
                details:
                  field: targetLocaleIds

  /projects/{projectId}/jobs/{translationJobUid}/strings/remove:
    post:
      summary: "Remove strings from a job"
      tags:
        - Job content
      description: "Remove strings from a job. Any strings removed from the job will also be unathorized within Smartling."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: RemoveStringsJobRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/RemoveStringsJobRequest'
      responses:
        200:
          description: Response after successfully removing strings to a job
          schema:
            $ref: '#/definitions/SuccessFailCountJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  successCount: 100 # number of strings removed from the job
                  failCount: 0 # number of strings that could not be removed from the job
        202:
          description: Async response when adding strings to a job. When the system cannot quickly add the strings to the job, then a 202 response is returned. The response contains a link to check the progress of the request. When a 202 is received, then the process of removing the content from the job will not be complete until the returned process has completed.
          schema:
            $ref: '#/definitions/AsyncProcessJobResponse'
          examples:
            application/json:
              response:
                code: ACCEPTED
                data:
                  message: This process will continue asynchronously and may take up to a few minutes.
                  url: "https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}"
  /projects/{projectId}/jobs/{translationJobUid}/close:
    post:
      summary: "Close a job"
      tags:
        - Job status
      description: "Close a completed job. In order for a Job to be closed, it must be in a Completed state. All content from the job will be removed when it is Closed. Closing a job guarentees that no additional work will be done against the job."
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
      responses:
        200:
          description: Response after successfully closing the job
          schema:
            $ref: '#/definitions/NullDataJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data: null
        400:
          description: Validation error when closing a job
          examples:
            application/json:
              response:
                code: VALIDATION_ERROR
                errors:
                  - key: null
                    message: 'Only a job that is COMPLETE can be closed.'
                    details: null

  /projects/{projectId}/jobs/{translationJobUid}/cancel:
    post:
      summary: "Cancel a job"
      tags:
        - Job status
      description: "Cancel the job. All content within the job will be removed from the job and the content will be unauthorized."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: CancelJobRequest
          in: body
          required: false
          schema:
            $ref: '#/definitions/CancelJobRequest'
      responses:
        200:
          description: Response after successfully cancelling the job
          schema:
            $ref: '#/definitions/NullDataJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data: null
        202:
          description: Async response when cancelling a job. When the system can not quickly cancel the job, then a 202 response is returned. The response contains a link to check the progress of the request. When a 202 is received, then the process of canceling and removing the content from the job will not be complete until the returned process has completed.
          schema:
            $ref: '#/definitions/AsyncProcessJobResponse'
          examples:
            application/json:
              response:
                code: ACCEPTED
                data:
                  message: This process will continue asynchronously and may take up to a few minutes.
                  url: "https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}"
        400:
          description: Validation error when cancelling a job
          examples:
            application/json:
              response:
                code: VALIDATION_ERROR
                errors:
                  - key: null
                    message: 'Job can be cancelled only in DRAFT, AWAITING_AUTHORIZATION, or IN_PROGRESS statuses'
                    details: null
        401:
          description: Authentication error
          examples:
            application/json:
              response:
                code: AUTHENTICATION_ERROR
                requestId: 47f37e51-b071-4384-84e2-6fefd510e354
                errors:
                  - message: Invalid token
                    key: invalid_token
                    details: {}
  /projects/{projectId}/jobs/{translationJobUid}/authorize:
    post:
      summary: "Authorize a job"
      tags:
        - Job status
      description: "Authorize all content within the job. A job can only be authorized when it a) has content and b) is in an AWAITING_AUTHORIZATION state."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: AuthorizeJobRequest
          in: body
          required: false
          schema:
            $ref: '#/definitions/AuthorizeJobRequest'
      responses:
        200:
          description: Response after successfully authorizing the job
          schema:
            $ref: '#/definitions/NullDataJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data: null
        400:
          description: Validation error when authorizing a job
          examples:
            application/json:
            response:
              code: VALIDATION_ERROR
              errors:
                - key: null
                  message: Job can be authorized only in AWAITING_AUTHORIZATION status(es).
                  details: null
  /projects/{projectId}/jobs/{translationJobUid}:
    get:
      summary: "Get a job"
      tags:
        - Job
      description: "Get the details of a job."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
      responses:
        200:
          description: Response for retrieving a job
          schema:
            $ref: '#/definitions/DetailedJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  translationJobUid: jhcgalvnb6za
                  jobName: 'test job (Cancelled 2017/11/04 12:01:28)'
                  targetLocaleIds:
                    - uk-UA
                    - ru-RU
                  description: null
                  dueDate: null
                  referenceNumber: null
                  callbackUrl: null
                  callbackMethod: null
                  createdDate: '2017-11-03T14:18:37Z'
                  modifiedDate: '2017-11-04T12:01:28Z'
                  createdByUserUid: '518252370016'
                  modifiedByUserUid: '598d89cce43a'
                  firstCompletedDate: null
                  lastCompletedDate: null
                  jobStatus: CANCELLED
                  sourceFiles:
                    - uri: admin.properties
                      name: admin.properties
        404:
          description: Job not found error
          examples:
            application/json:
              response:
                code: NOT_FOUND_ERROR
                errors:
                  - key: null
                    message: null
                    details: null
    put:
      summary: "Update a job"
      tags:
        - Job
      description: "Updates the attributes of the job."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: UpdateJobRequest
          in: body
          required: true
          schema:
            $ref: '#/definitions/UpdateJobRequest'
      responses:
        200:
          description: Response after successfully updating a job
          schema:
            $ref: '#/definitions/DetailedJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  translationJobUid: jhcgalvnb6za
                  jobName: 'Test Job'
                  targetLocaleIds:
                    - uk-UA
                    - ru-RU
                  description: 'Description of the job'
                  dueDate: '2020-11-03T14:18:37Z'
                  referenceNumber: null
                  callbackUrl: null
                  callbackMethod: null
                  createdDate: '2017-11-03T14:18:37Z'
                  modifiedDate: '2017-11-04T12:01:28Z'
                  createdByUserUid: '518252370016'
                  modifiedByUserUid: '598d89cce43a'
                  firstCompletedDate: null
                  lastCompletedDate: null
                  jobStatus: AWAITING_AUTHORIZATION
                  sourceFiles:
                    - uri: admin.properties
                      name: admin.properties
        404:
          description: Job not found error
          examples:
            application/json:
              response:
                code: NOT_FOUND_ERROR
                errors:
                  - key: null
                    message: null
                    details: null
        400:
          description: Validation error on updating a job
          examples:
            application/json:
            response:
              code: VALIDATION_ERROR
              errors:
                - key: null
                  message: 'Job can be edited only in DRAFT, AWAITING_AUTHORIZATION, IN_PROGRESS or COMPLETED statuses.'
                  details: null
  /projects/{projectId}/jobs/search:
    post:
      summary: "Job Search"
      tags:
        - Job
      description: "Search for jobs based on hashcodes, fileUri's, and translationJobUid's"
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: SearchJobRequest
          in: body
          required: true
          description: "The filters to use when searching for jobs within the project."
          schema:
            $ref: '#/definitions/SearchJobRequest'
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ListJobsResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  totalCount : 2
                  items:
                  - translationJobUid : "abc123abc"
                    jobName : "myJobName"
                    targetLocaleIds :
                    - uk-UA
                    - ru-RU
                    description : "my job description"
                    dueDate : "2015-11-21T11:51:17Z"
                    referenceNumber : "myReferenceNumber1"
                    createdDate : "2015-11-21T11:51:17Z"
                    jobStatus : "IN_PROGRESS"
                  - translationJobUid : "abc321xyz"
                    jobName : "myJobName"
                    targetLocaleIds :
                    - uk-UA
                    - ru-RU
                    description : "my job description"
                    dueDate : "2015-11-21T11:51:17Z"
                    referenceNumber : "myReferenceNumber1"
                    createdDate : "2015-11-21T11:51:17Z"
                    jobStatus : "IN_PROGRESS"
  /projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}:
    get:
      summary: "Check for an async process for a job"
      tags:
        - Job actions
      description: "Check for an async process for a job"
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: processUid
          in: path
          required: true
          type: string
      responses:
        200:
          description: Ok
          schema:
            $ref: '#/definitions/ProcessCheckJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  processUid : "13424r5-qaswerxs-43435ff"
                  translationJobUid : "784578f-qaswerxs-43435ff"
                  processState : "IN_PROGRESS | COMPLETED | FAILED"
                  createdDate : "2015-11-21T11:51:17Z"
                  modifiedDate : "2015-11-21T11:51:17Z"
  /projects/{projectId}/jobs/{translationJobUid}/file/add:
    post:
      summary: "Add a file to a job"
      tags:
        - Job content
      description: "Adds a file to the job. By default, the file will be added for all locales of the job. This can be changed by specifying the targetLocaleIds for the job to add the file into. <br>Validation rules:<ul>
        <li>A job can contain a maximum of 5000 files</li>
        <li>Content can not be added to the job if the job contains no locales and the request to add a file does not specify any locales</li>
        <li>The file (specified by the fileUri) cannot be in the process of being uploaded / modified within Smartling. It should complete its upload process before being added to a job.</li>
        <li>Any targetLocale's specified must be valid within the project the job has been created for.</li></ul>"
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: AddFileJobRequest
          in: body
          required: true
          description: "The fileUri (unique uri of the file). The file should not currently be in the process of being uploaded to Smartling before being added to a job. To check this, you can invoke the file-api /file/status API on the file and verify a 200 response before requesting the file be added to the job."
          schema:
            $ref: '#/definitions/AddFileJobRequest'
      responses:
        200:
          description: Sync response when adding a file to a job. This is received when the system can quickly add the file and its content to the job.
          schema:
            $ref: '#/definitions/SuccessFailCountJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  successCount: 1 # The number of strings added to the job
                  failCount: 1 # The number of strings that could not be added to the job
        202:
          description: Async response when adding a file to a job. When the system cannot quickly add the file and its content to the job, then a 202 response is returned. The response contains a link to check the progress of the request. When a 202 is received, then the process of adding the content to the job will not be complete until the returned process has completed.
          schema:
            $ref: '#/definitions/AsyncProcessJobResponse'
          examples:
            application/json:
              response:
                code: ACCEPTED
                data:
                  message: This process will continue asynchronously and may take up to a few minutes.
                  url: "https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}"
        400:
          description: Validation error adding file to a job
          examples:
            application/json:
              response:
                code: VALIDATION_ERROR
                errors:
                  - key: null
                    message: 'File not found: <fileUri>'
                    details: null
  /projects/{projectId}/jobs/{translationJobUid}/file/remove:
    post:
      summary: "Remove a file from a job"
      tags:
        - Job content
      description: "Removes a file from a job. All content that is part of the file contained within that job will be removed from the job and will become unuathorized content."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: RemoveFileJobRequest
          in: body
          required: true
          description: The fileUri (unique uri of the file) that is to be removed from the job.
          schema:
            $ref: '#/definitions/RemoveFileJobRequest'
      responses:
        200:
          description: Sync response when removing a file to a job. This is received when the system can quickly remove the file and its content from the job.
          schema:
            $ref: '#/definitions/SuccessFailCountJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  successCount: 1 # The number of strings removed from the job
                  failCount: 1 # The number of strings that could not be removed from the job
        202:
          description: Async response when removing a file from a job. When the system cannot quickly remove the file and its content to the job, then a 202 response is returned. The response contains a link to check the progress of the request. When a 202 is received, then the process of removing the file and it's contents from the job will not be complete until the returned process has completed.
          schema:
            $ref: '#/definitions/AsyncProcessJobResponse'
          examples:
            application/json:
              response:
                code: ACCEPTED
                data:
                  message: This process will continue asynchronously and may take up to a few minutes.
                  url: "https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}"
        404:
          description: Not found validation error
          examples:
            application/json:
              response:
                code: NOT_FOUND_ERROR
                errors:
                  - key: null
                    message: null
                    details: null
  /projects/{projectId}/job/{translationJobUid}/files:
    get:
      summary: "List Files"
      tags:
        - Job
      description: "List files within a job."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: limit
          in: query
          type: integer
          required: false
          description: The limit on the number of files returned.
        - name: offset
          in: query
          type: integer
          required: false
          description: The offset to use when searching for files.
      responses:
        200:
          description: OK
          schema:
            $ref: '#/definitions/ListFilesResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  totalCount : 2
                  items:
                  - uri : "/file/app1.properties"
                  - uri : "/file/app2.properties"
  /projects/{projectId}/jobs/{translationJobUid}/locales/{localeId}:
    post:
      summary: "Add a locale to a job"
      tags:
        - Job content
      description: "Adds a locale to the job."
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: localeId
          in: path
          required: true
          type: string
        - name: syncContent
          in: query
          required: false
          type: string
          description: Default to true. When a new locale is being added to a job, by default all content in the job will be added to the job for the new locale. If set to false, then no content will be added to the job, but just a locale placeholder will be added to the job.
      responses:
        200:
          description: Sync response when adding a locale to a job. This is received when the system can quickly add the locale and any content to the job.
          schema:
            $ref: '#/definitions/NullDataJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data: null
        202:
          description: Async response when adding a locale to a job. When the system cannot quickly add the locale and any content to the job, then a 202 response is returned. The response contains a link to check the progress of the request. When a 202 is received, then the process of adding the content to the job will not be complete until the returned process has completed.
          schema:
            $ref: '#/definitions/AsyncProcessJobResponse'
          examples:
            application/json:
              response:
                code: ACCEPTED
                data:
                  message: This process will continue asynchronously and may take up to a few minutes.
                  url: "https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}"
    delete:
      summary: "Removes a locale from the job"
      tags:
        - Job content
      description: "Removes a locale from the job. When removing a locale from a job (and thus any content within that job for that locale), the content being removed will be unauthorized."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: localeId
          in: path
          required: true
          type: string
      responses:
        200:
          description: "Sync response when removing a locale from a job. This is received when the system can quickly remove the locale and any content from the job."
          schema:
            $ref: '#/definitions/NullDataJobResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data: null
        202:
          description: "Async response when removing a locale from a job. When the system cannot quickly remove the locale and any content from the job, then a 202 response is returned. The response contains a link to check the progress of the request. When a 202 is received, then the process of removing the content from the job will not be complete until the returned process has completed."
          schema:
            $ref: '#/definitions/AsyncProcessJobResponse'
          examples:
            application/json:
              response:
                code: ACCEPTED
                data:
                  message: "This process will continue asynchronously and may take up to a few minutes."
                  url: "https://api.smartling.com/jobs-api/v3/projects/{projectId}/jobs/{translationJobUid}/processes/{processUid}"
  /projects/{projectId}/jobs/{translationJobUid}/file/progress:
    get:
      summary: "Get the progress for a file within the Job"
      tags:
        - Job
      description: "Get the progress of a file within a job."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: fileUri
          in: query
          required: true
          type: string
      responses:
        200:
          description: Response for getting job progress of a file
          schema:
            $ref: '#/definitions/ProgressResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  contentProgressReport:
                    - targetLocaleId: uk-UA
                      targetLocaleDescription: Ukrainian (Ukraine)
                      workflowProgressReportList:
                        - workflowUid: 091e04a9faca
                          workflowName: Project Default
                          workflowStepSummaryReportItemList:
                            - workflowStepUid: 559ce40f2789
                              workflowStepName: Translation
                              stringCount: 4
                              wordCount: 16
                              workflowStepType: TRANSLATION
                            - workflowStepUid: 704a4b554b85
                              workflowStepName: Edit
                              stringCount: 0
                              wordCount: 0
                              workflowStepType: POST_TRANSLATION__EDIT
                            - workflowStepUid: b50f989af2c3
                              workflowStepName: Published
                              stringCount: 0
                              wordCount: 0
                              workflowStepType: PUBLISH
                      unauthorizedProgressReport:
                        stringCount: 0
                        wordCount: 0
                      progress:
                        totalWordCount: 16
                        percentComplete: 25
                    - targetLocaleId: ru-RU
                      targetLocaleDescription: Russian
                      workflowProgressReportList:
                        - workflowUid: 091e04a9faca
                          workflowName: Project Default
                          workflowStepSummaryReportItemList:
                            - workflowStepUid: 559ce40f2789
                              workflowStepName: Translation
                              stringCount: 1
                              wordCount: 4
                              workflowStepType: TRANSLATION
                            - workflowStepUid: 704a4b554b85
                              workflowStepName: Edit
                              stringCount: 2
                              wordCount: 8
                              workflowStepType: POST_TRANSLATION__EDIT
                            - workflowStepUid: b50f989af2c3
                              workflowStepName: Published
                              stringCount: 1
                              wordCount: 4
                              workflowStepType: PUBLISH
                      unauthorizedProgressReport:
                        stringCount: 0
                        wordCount: 0
                      progress:
                        totalWordCount: 16
                        percentComplete: 75
                  progress:
                    totalWordCount: 32
                    percentComplete: 50
  /projects/{projectId}/jobs/{translationJobUid}/progress:
    get:
      summary: "Get Job Progress"
      tags:
        - Job
      description: "Get the progress of a job."
      consumes:
        - application/json
      parameters:
        - name: projectId
          in: path
          required: true
          type: string
        - name: translationJobUid
          in: path
          required: true
          type: string
        - name: targetLocaleId
          in: query
          required: false
          type: string
      responses:
        200:
          description: Response for getting job progress.
          schema:
            $ref: '#/definitions/ProgressResponse'
          examples:
            application/json:
              response:
                code: SUCCESS
                data:
                  contentProgressReport:
                    - targetLocaleId: uk-UA
                      targetLocaleDescription: Ukrainian (Ukraine)
                      workflowProgressReportList:
                        - workflowUid: 091e04a9faca
                          workflowName: Project Default
                          workflowStepSummaryReportItemList:
                            - workflowStepUid: 559ce40f2789
                              workflowStepName: Translation
                              stringCount: 4
                              wordCount: 16
                              workflowStepType: TRANSLATION
                            - workflowStepUid: 704a4b554b85
                              workflowStepName: Edit
                              stringCount: 0
                              wordCount: 0
                              workflowStepType: POST_TRANSLATION__EDIT
                            - workflowStepUid: b50f989af2c3
                              workflowStepName: Published
                              stringCount: 0
                              wordCount: 0
                              workflowStepType: PUBLISH
                      unauthorizedProgressReport:
                        stringCount: 0
                        wordCount: 0
                      progress:
                        totalWordCount: 16
                        percentComplete: 25
                    - targetLocaleId: ru-RU
                      targetLocaleDescription: Russian
                      workflowProgressReportList:
                        - workflowUid: 091e04a9faca
                          workflowName: Project Default
                          workflowStepSummaryReportItemList:
                            - workflowStepUid: 559ce40f2789
                              workflowStepName: Translation
                              stringCount: 1
                              wordCount: 4
                              workflowStepType: TRANSLATION
                            - workflowStepUid: 704a4b554b85
                              workflowStepName: Edit
                              stringCount: 2
                              wordCount: 8
                              workflowStepType: POST_TRANSLATION__EDIT
                            - workflowStepUid: b50f989af2c3
                              workflowStepName: Published
                              stringCount: 1
                              wordCount: 4
                              workflowStepType: PUBLISH
                      unauthorizedProgressReport:
                        stringCount: 0
                        wordCount: 0
                      progress:
                        totalWordCount: 16
                        percentComplete: 75
                  progress:
                    totalWordCount: 32
                    percentComplete: 50
        404:
          description: Not found error
          examples:
            application/json:
              response:
                code: NOT_FOUND_ERROR
                errors:
                  - key: null
                    message: null
                    details: null
securityDefinitions:
  SmartlingAuth:
    type: apiKey
    name: authorization
    in: header
definitions:
  SuccessResponse:
    type: object
    properties:
      code:
        type: string
        enum:
          - SUCCESS
  AsyncAcceptedResponse:
    type: object
    properties:
      code:
        type: string
        enum:
          - ACCEPTED
  CancelJobRequest:
    description: The payload to use when cancelling a job.
    type: object
    properties:
      reason:
        type: string
        description: Optional field that can be used to indicate the reason the job was cancelled.
  RemoveFileJobRequest:
    description: The payload to use when removing a file from a job.
    type: object
    properties:
      fileUri:
        type: string
        description: The uri of the file that is to be removed from the job.
  SearchJobRequest:
    description: The payload to use for searching for jobs. At least one of hashcodes, fileUris, and translationJobUids must be specified. The individual param results are AND'd together.
    type: object
    properties:
      hashcodes:
        type: array
        items:
          type: string
        description: (Optional) The hashcodes (string identifiers) to use to search for jobs. Any job containing the hashcodes specified will be returned.
      fileUris:
        type: array
        items:
          type: string
        description: (Optional) The fileUris (file identifiers) to use to search for jobs. Any job containing the fileUri specified will be returned.
      translationJobUids:
        type: array
        items:
          type: string
        description: (Optional) The translationJobUids (translation job identifiers) to use to search for jobs. Any job containing the fileUri specified will be returned.
  RemoveStringsJobRequest:
    description: The payload to use when removing strings from a job.
    type: object
    properties:
      hashcodes:
        type: array
        items:
          type: string
          example: ["ca51a04da69cf64dce022bb4f146c962"]
        description: The hashcodes (string identifiers) that should be removed from the job.
      localeIds:
        type: array
        items:
          type: string
          example: ["ru-RU"]
        description: (Optional) The array of localeId's that the strings should be removed from. If not specified, the strings will be removed from all locales within that job.
  AddStringsJobRequest:
    description: The payload to use when adding strings to a job.
    type: object
    properties:
      moveEnabled:
        type: boolean
        default: false
        description: (Optional), default to false. By rule, a string for a locale can only be in one job. If the string identified in the request is already in a job for a locale then it won't be added. But, moveEnalbed=true can be specified and in this case the string will be moved into the specified job.
      hashcodes:
        type: array
        items:
          type: string
        description: The array of hashcodes to use to add to the job. The hashcodes must exist within Smartling for the project in order to be added to a job. Hashcodes are required when adding strings to a job. Hashcodes is limited to 1000 per API call.
        maxItems: 1000
      targetLocaleIds:
        type: array
        items:
          type: string
        description: The array of localeId's that the strings should be added to. If not specified, the strings will be added to all locales within that job. If specified, the strings will only be added for the locales provided. If the locale\'s were not already part of the job, then the job will be extended to contain the additional locales.
  AddFileJobRequest:
    description: The payload to use when adding a file to a job.
    type: object
    properties:
      fileUri:
        type: string
        description: The uri of the file that has been uploaded to Smartling. fileUri is required.
      targetLocaleIds:
        type: array
        items:
          type: string
        description: The array of localeId's that the file should be added to. If not specified, the file will be added to all locales. If specified, the file will only be added for the locales provided. If the locale\'s were not already part of the job, then the job will be extended to contain the additional locales.
  CreateJobRequest:
    description: The payload to use when creating a job.
    type: object
    properties:
      jobName:
        type: string
        example: This is my job name.
        description: The name of the job to create. The name of the job must be unique within the Smartling project. jobName is required.
        maxLength: 170
      targetLocaleIds:
        type: array
        items:
          type: string
        description: The array of localeId's to be used when creating the job. The locale\'s specified must be valid within the Smartling project.
        example: ["ru-RU"]
      description:
        type: string
        example: This is my job description.
        description: The description of the job. The description is limited to 2,000 characters.
      dueDate:
        type: string
        format: date-time
        example: "2020-11-21T01:51:17Z"
        description: The date the job is requested to be completed by.
      referenceNumber:
        type: string
        example: "referenceNumb1"
        description: Customer specific number/identifier for the job.
      callbackUrl:
        type: string
        example: "https://myDomain.com"
        description: The URL for Smartling to invoke when the job is completed.
      callbackMethod:
        type: string
        example: "GET"
        description: The http method to call (GET|POST) when invoking the callbackUrl.
  AuthorizeJobRequest:
    description: The payload to use when authorizing a job. If not provided, Smartling will authorize the job for the default workflows for the given Project.
    type: object
    properties:
      localeWorkflows:
        type: array
        items:
          $ref: '#/definitions/AuthorizeJobItemRequest'
  AuthorizeJobItemRequest:
    description: Indicates which workflow to authorize for a given locale.
    type: object
    properties:
      targetLocaleId:
        type: string
        description: The locale identifier to use when indicating the locale to authorize content for. If targetLocaleId is specified, then workflowUid is required as well. Both can be ommitted and then the default workflow for that locale will be used.
      workflowUid:
        type: string
        description: The uid of the workflow to authorize content into.
  UpdateJobRequest:
    description: The payload to use when updating a job.
    type: object
    properties:
      jobName:
        type: string
        description: The name of the job. The name of the job must be unique within the Smartling project.
        maxLength: 170
      description:
        type: string
        description: The description of the job.
      dueDate:
        type: string
        format: date-time
        example: '2020-11-21T01:51:17Z'
        description: The date the job is requested to be completed by.
      referenceNumber:
        type: string
        description: Customer specific number/identifier for the job.
        example: 'CustomerReferenceNum1'
      callbackUrl:
        type: string
        description: "The URL for Smartling to invoke when the job is completed."
        example: "https://myDomain.com"
      callbackMethod:
        type: string
        example: "GET"
        description: "The http method to call (GET|POST) when invoking the callbackUrl."
  ProgressResponse:
    required:
      - response
    properties:
      response:
        allOf:
        - $ref: '#/definitions/SuccessResponse'
        - required:
            - data
          properties:
            data:
              properties:
                contentProgressReport:
                  type: array
                  items:
                    $ref: '#/definitions/ContentProgressReportItemResponse'
                progress:
                  $ref: '#/definitions/ProgressInfoReposnse'
  ContentProgressReportItemResponse:
    type: object
    properties:
      targetLocaleId:
        type: string
      targetLocaleDescription:
        type: string
      unuathorizedProgressReport:
        $ref: '#/definitions/StringCountWordCountResponse'
      workflowProgressReportList:
        type: array
        items:
          $ref: '#/definitions/WorkflowProgressReportItemResponse'
  WorkflowProgressReportItemResponse:
    type: object
    properties:
      workflowUid:
        type: string
        description: The uid of the workflow.
      workflowName:
        type: string
        description: The name of the workflow.
      workflowStepSummaryReportItemList:
        type: array
        items:
          $ref: '#/definitions/WorkflowStepSummaryReportItemResponse'
  WorkflowStepSummaryReportItemResponse:
    type: object
    properties:
      workflowStepUid:
        type: string
        description: The uid of the workflow step.
      workflowStepName:
        type: string
        description: The name of the workflow step.
      workflowStepType:
        type: string
        description: The type of the step.
      stringCount:
        type: number
        description: The total number of strings within that particular step.
      wordCount:
        type: number
        description: The total number of words within that particular step.
  StringCountWordCountResponse:
    type: object
    properties:
      stringCount:
        type: number
        description: The total number of strings within that particular step.
      wordCount:
        type: number
        description: The total number of words within that particular step.
  ListJobsResponse:
    required:
      - response
    properties:
      response:
        allOf:
        - $ref: '#/definitions/SuccessResponse'
        - required:
            - data
          properties:
            data:
              properties:
                totalCount:
                  type: number
                items:
                  type: array
                  items:
                    $ref: '#/definitions/ListJobsResponseItem'
  ListJobsResponseItem:
    properties:
      data:
        type: object
        properties:
          translationJobUid:
            description: The unique identifier of the job.
            type: string
          jobName:
            description: The name of the job.
            type: string
          targetLocaleIds:
            description: The array of localeIds for the job.
            type: array
            items:
              type: string
          description:
            description: The description of the job.
            type: string
          dueDate:
            description: The UTC value of the due date for the job.
            type: string
            format: date-time
            example: 2015-11-21T01:51:17Z
          createdDate:
            description: The UTC value of the date the job was created.
            type: string
            format: date-time
            example: 2015-11-21T01:51:17Z
          jobStatus:
            description: The status of the job
            type: string
            example: DRAFT | AWAITING_AUTHORIZATION | IN_PROGRESS | COMPLETED | CANCELLED | CLOSED
  SuccessFailCountJobResponse:
    allOf:
    - $ref: '#/definitions/SuccessResponse'
    - type: object
      properties:
        data:
          type: object
          properties:
            successCount:
              description: The number of strings per locale added to the job.
              type: string
            failCount:
              description: The number of strings per locale that could not be added to the job.
              type: string
  DetailedJobResponse:
    allOf:
    - $ref: '#/definitions/SuccessResponse'
    - type: object
      properties:
        data:
          type: object
          properties:
            translationJobUid:
              description: The unique identifier created for the job.
              type: string
            jobName:
              description: The name of the job.
              type: string
            targetLocaleIds:
              description: The array of localeIds for the job.
              type: array
              items:
                type: string
            description:
              description: The description of the job.
              type: string
            dueDate:
              description: The UTC value of the due date for the job.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            callbackUrl:
              description: The callback URL to invoke when a job is completed.
              type: string
            callbackMethod:
              description: The http method (GET|POST) to use when Smartling invokes the callback URL upon job completion.
            createdDate:
              description: The UTC value of the date the job was created.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            modifiedDate:
              description: The UTC value of the date the job was modified.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            createdByUserUid:
              description: The userUid of whom created the job.
              type: string
            modifiedByUserUid:
              description: The userUid of whom last modified the job.
              type: string
            jobStatus:
              description: The status of the job.
              type: string
              example: "DRAFT | AWAITING_AUTHORIZATION | IN_PROGRESS | COMPLETED | CANCELLED | CLOSED"
            firstCompletedDate:
              description: The UTC value of when the job was first completed.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            lastCompletedDate:
              description: The UTC value of when the job was last completed.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            sourceFiles:
              description: The list of content source files that have been referenced for the job. Only the first 300 files are returned here. If you have additional files in your job, see the files pageination api, jobs-api/projects/{projectId}/job/{translationJobUid}/files
              type: array
              items:
                $ref: '#/definitions/SourceFile'
  AsyncProcessJobResponse:
    allOf:
    - $ref: '#/definitions/AsyncAcceptedResponse'
    - type: object
      properties:
        data:
          type: object
          properties:
            message:
              type: string
              description: User friendly string for the async response explaining the async action taking place.
            processUid:
              type: string
              description: The unique identifier crated for the async process.
            url:
              type: string
              description: The URL that a system can use to check the status of the async processing request.
  NullDataJobResponse:
    allOf:
    - $ref: '#/definitions/SuccessResponse'
    - type: object
      properties:
        data:
          type: object
          properties:
            data:
              type: object
  ProcessCheckJobResponse:
    allOf:
    - $ref: '#/definitions/SuccessResponse'
    - type: object
      properties:
        data:
          type: object
          properties:
            processUid:
              description: The unique identifier for a process.
              type: string
            processState:
              description: The current state of the process. Values returned are IN_PROGRESS | COMPLETED | FAILED.
              type: string
            createdDate:
              description: The UTC value of when the process was created.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            modifiedDate:
              description: The UTC value of when the process was last modified.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
  ShallowJobResponse:
    allOf:
    - $ref: '#/definitions/SuccessResponse'
    - type: object
      properties:
        data:
          type: object
          properties:
            translationJobUid:
              description: The unique identifier for the job.
              type: string
            jobName:
              description: The name of the job.
              type: string
            targetLocaleIds:
              description: The array of localeIds for the job.
              type: array
              items:
                type: string
            description:
              description: The description of the job.
              type: string
            dueDate:
              description: The UTC value of the due date for the job.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            callbackUrl:
              description: The callback URL to invoke when a job is completed.
              type: string
            callbackMethod:
              description: The http method (GET|POST) to use when Smartling invokes the callback URL upon job completion.
            createdDate:
              description: The UTC value of the date the job was created.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            modifiedDate:
              description: The UTC value of the date the job was modified.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            createdByUserUid:
              description: The userUid of who created the job.
              type: string
            modifiedByUserUid:
              description: The userUid of who last modified the job.
              type: string
            jobStatus:
              description: The status of the job.
              type: string 
              example: "DRAFT | AWAITING_AUTHORIZATION | IN_PROGRESS | COMPLETED | CANCELLED | CLOSED"
            firstCompletedDate:
              description: The UTC value of when the job was first completed.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
            lastCompletedDate:
              description: The UTC value of when the job was last completed.
              type: string
              format: date-time
              example: 2015-11-21T01:51:17Z
  ProgressInfoReposnse:
    type: object
    properties:
      data:
        type: object
        properties:
          totalWordCount:
            description: The total number of words within that particular group (locale/file/job).
            type: number
            example: 192
          percentComplete:
            description: The percent of group (locale/file/job) completeness, 0 - 100.
            type: number
            example: 52
  ListFilesResponse:
    required:
      - response
    properties:
      response:
        allOf:
        - $ref: '#/definitions/SuccessResponse'
        - required:
            - data
          properties:
            data:
              properties:
                totalCount:
                  type: number
                items:
                  type: array
                  items:
                    $ref: '#/definitions/FileUri'
  SourceFile:
    type: object
    properties:
      data:
        type: object
        properties:
          uri:
            description: File uri
            type: string
          name:
            description: File name
            type: string
  FileUri:
    type: object
    properties:
      data:
        type: object
        properties:
          uri:
            description: File uri
            type: string